// Toastr js
!function (e) { e(["jquery"], function (e) { return function () { var n, t, o = 0, i = { error: "error", info: "info", success: "success", warning: "warning" }, s = { clear: function (t) { var o = c(); n || d(o); if (t && 0 === e(":focus", t).length) return void t[o.hideMethod]({ duration: o.hideDuration, easing: o.hideEasing, complete: function () { u(t) } }); n.children().length && n[o.hideMethod]({ duration: o.hideDuration, easing: o.hideEasing, complete: function () { n.remove() } }) }, error: function (e, n, t) { return r({ type: i.error, iconClass: c().iconClasses.error, message: e, optionsOverride: t, title: n }) }, getContainer: d, info: function (e, n, t) { return r({ type: i.info, iconClass: c().iconClasses.info, message: e, optionsOverride: t, title: n }) }, options: {}, subscribe: function (e) { t = e }, success: function (e, n, t) { return r({ type: i.success, iconClass: c().iconClasses.success, message: e, optionsOverride: t, title: n }) }, version: "2.0.1", warning: function (e, n, t) { return r({ type: i.warning, iconClass: c().iconClasses.warning, message: e, optionsOverride: t, title: n }) } }; return s; function a(e) { t && t(e) } function r(t) { var i = c(), s = t.iconClass || i.iconClass; void 0 !== t.optionsOverride && (i = e.extend(i, t.optionsOverride), s = t.optionsOverride.iconClass || s), o++, n = d(i); var r = null, l = e("<div/>"), p = e("<div/>"), f = e("<div/>"), g = e(i.closeHtml), h = { toastId: o, state: "visible", startTime: new Date, options: i, map: t }; return t.iconClass && l.addClass(i.toastClass).addClass(s), t.title && (p.append(t.title).addClass(i.titleClass), l.append(p)), t.message && (f.append(t.message).addClass(i.messageClass), l.append(f)), i.closeButton && (g.addClass("toast-close-button"), l.prepend(g)), l.hide(), i.newestOnTop ? n.prepend(l) : n.append(l), l[i.showMethod]({ duration: i.showDuration, easing: i.showEasing, complete: i.onShown }), i.timeOut > 0 && (r = setTimeout(m, i.timeOut)), l.on('hover', function () { clearTimeout(r), l.stop(!0, !0)[i.showMethod]({ duration: i.showDuration, easing: i.showEasing }) }, function () { (i.timeOut > 0 || i.extendedTimeOut > 0) && (r = setTimeout(m, i.extendedTimeOut)) }), !i.onclick && i.tapToDismiss && l.click(m), i.closeButton && g && g.on('click', function (e) { e.stopPropagation(), m(!0) }), i.onclick && l.on('click', function () { i.onclick(), m() }), a(h), i.debug && console && console.log(h), l; function m(n) { if (!e(":focus", l).length || n) return l[i.hideMethod]({ duration: i.hideDuration, easing: i.hideEasing, complete: function () { u(l), i.onHidden && i.onHidden(), h.state = "hidden", h.endTime = new Date, a(h) } }) } } function d(t) { return t || (t = c()), (n = e("#" + t.containerId)).length ? n : ((n = e("<div/>").attr("id", t.containerId).addClass(t.positionClass)).appendTo(e(t.target)), n) } function c() { return e.extend({}, { tapToDismiss: !0, toastClass: "toast", containerId: "toast-container", debug: !1, showMethod: "fadeIn", showDuration: 300, showEasing: "swing", onShown: void 0, hideMethod: "fadeOut", hideDuration: 1e3, hideEasing: "swing", onHidden: void 0, extendedTimeOut: 1e3, iconClasses: { error: "toast-error", info: "toast-info", success: "toast-success", warning: "toast-warning" }, iconClass: "toast-info", positionClass: "toast-top-right", timeOut: 5e3, titleClass: "toast-title", messageClass: "toast-message", target: "body", closeHtml: "<button>&times;</button>", newestOnTop: !0 }, s.options) } function u(e) { n || (n = d()), e.is(":visible") || (e.remove(), e = null, 0 === n.children().length && n.remove()) } }() }) }("function" == typeof define && define.amd ? define : function (e, n) { "undefined" != typeof module && module.exports ? module.exports = n(require(e[0])) : window.toastr = n(window.jQuery) });
